#
# For peco
alias c=change-repo
change-repo() {
  output1=$(ghq list -p)
  output2=$(find $HOME/Dropbox/fukajun -maxdepth 2 | grep '.git$' | sed 's/.git$//')
  select=$(echo "$output1\n$output2"  | peco)
  if [ -z "$select" ]; then
    return
  fi
  cd $select
}

alias t=change-tmux
change-tmux() {
  cnt=$(ps -ef | grep tmux | grep -c -v grep)
  if [ $cnt -eq 0 ]; then
    echo "No session"
    return
  fi
  if [ "$TMUX" != "" ]; then
    echo "Already in session"
    return
  fi
  session=$(tmux list-session | peco)
  if [ -z "$session" ]; then
    return
  fi
  session_id=$(echo $session | awk 'BEGIN{FS=":"}{print $1}')
  tmux attach-session -t $session_id
}

alias pb=peco-bundle-open
peco-bundle-open() {
  select=$(bundle list | sed -e 's/^ *\* *//g' | peco)
  select_gem=$(echo $select | awk 'BEGIN{FS=" "}{print $1}')
  echo $select_gem
  if [ -z "$select_gem" ]; then
    return
  fi
  echo $select_gem
  bundle open $select_gem
}

alias h=peco-cmd-history
peco-cmd-history() {
  select=$(history | cut -d ' ' -f 5-  | sort -u | peco)
  if [ "$select" == "" ]; then
    return
  fi
  echo $select
  echo $select >&1
}

#
# git-now コマンド http://d.hatena.ne.jp/sinsoku/20101208/1291770514
#
alias be="bundle exec"
alias tbe="RAILS_ENV=test bundle exec"
alias dbe="RAILS_ENV=development bundle exec"
alias gg="gg_handler"
gg_handler() {
  echo "----------------------"
  git log --oneline --stat | head -10
  echo "----------------------"
  git status;
  echo "----------------------"
}
git-now() {
  PREFIX="from now"
  MESSAGE="[${PREFIX}] `date`"

  if [ $# -eq 0 ]
  then
      git add -u
      printf "${MESSAGE}\n\n%s" "`git diff --cached`" | git commit -F -
  elif [ $1 != "--rebase" ]
  then
      git add $@
      printf "${MESSAGE}\n\n%s" "`git diff --cached`" | git commit -F -
  else
      FIRST_NOW_COMMIT=`git log --pretty=oneline --grep="${PREFIX}" | tail -n 1 | cut -d " " -f 1`
      INITIAL_COMMIT=`git log --pretty=oneline | tail -n 1 | cut -d " " -f 1`

      if [ ${FIRST_NOW_COMMIT} != ${INITIAL_COMMIT} ]
      then
          git rebase -i ${FIRST_NOW_COMMIT}^
      else
          WORKING_BRANCH=`git branch -l | grep "*" | cut -d " " -f 2`

          git checkout ${FIRST_NOW_COMMIT}
          git commit --amend
          git rebase --onto HEAD ${FIRST_NOW_COMMIT} ${WORKING_BRANCH}
      fi
  fi
}

# ALIAS
# For bundle exec
alias be='bundle exec'
alias gst="git status -b -s&& git stash list"
PATH=${HOME}/bin:${PATH}
export PATH
